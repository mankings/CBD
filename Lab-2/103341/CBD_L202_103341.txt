// 1.
db.restaurants.find()

// 2.
db.restaurants.find({}, {"restaurant_id": 1, "nome": 1, "localidade": 1, "gastronomia": 1})

// 3.
db.restaurants.find({}, {"restaurant_id": 1, "nome": 1, "localidade": 1, "zipcode": 1, "_id": 0})

// 4.
db.restaurants.find({"localidade": "Bronx"}).count()

// 5.
db.restaurants.find({"localidade": "Bronx"}).sort({"nome": 1}).limit(15)

// 6.
db.restaurants.find({"grades.score": {$gt: 85}})

// 7.
db.restaurants.find({"grades.score": {$gte: 80, $lte: 100}})

// 8.
db.restaurants.find({"address.coord.0": {$lt : -95.7}})

// 9.
db.restaurants.find({"gastronomia": {$ne: "American"}, "grades.score": {$gt : 70}, "address.coord.0": {$lt : -65}})

// 10.
db.restaurants.find({"nome": /^Wil/}, {"_id": 0, "restaurant_id": 1, "nome": 1, "localidade": 1, "gastronomia": 1})

// 11.
db.restaurants.find({"gastronomia": {$in: ["American", "Chinese"]}}, {"_id": 0, "nome": 1, "localidade": 1, "gastronomia": 1})

// 12.
db.restaurants.find({"localidade": {$in: ["Staten Island", "Queens", "Brooklyn"]}}, {"_id": 0, "restaurant_id": 1, "nome": 1, "localidade": 1, "gastronomia": 1})

// 13.
db.restaurants.find({"grades.score": {$not: {$gt: 3}}}, {"_id": 0, "nome": 1, "localidade": 1, "gastronomia": 1, "grades.score": 1})

// 14.
db.restaurants.find({"grades": {"$elemMatch": {grade:"A", score: 10, date: ISODate("2014-08-11T00:00:00Z")}}}, {"_id": 0, "nome": 1, "grades.grade":1})

// 15.
db.restaurants.find({"grades.1.grade": "A", "grades.1.date": ISODate("2014-08-11T00:00:00Z")}, {"_id": 0, "restaurant_id": 1, "nome": 1, "grades.score": 1})

// 16.
db.restaurants.find({"address.coord.1": {$gt: 42, $lte: 52}}, {"_id": 0, "restaurant_id": 1, "nome": 1, "address": 1})

// 17.
db.restaurants.find({}, {"_id": 0, "nome": 1, "localidade": 1}).sort({"gastronomia": 1, "localidade": -1})

// 18.
db.restaurants.find({"localidade": "Brooklyn", "gastronomia": {$ne: "American"}, "grades.grade": "A"}, {"_id": 0, "nome": 1, "localidade": 1, "grade": 1, "gastronomia": 1}).sort({"gastronomia": -1})

// 19.
db.restaurants.aggregate([{$group: {"_id": "$localidade", "count": {$sum: 1}}}])

// 20.
db.restaurants.aggregate([{$addFields: {avg_scores: {$avg: "$grades.score"}}}, {$match: {avg_scores: {$gt: 30}}}])

// 21.
db.restaurants.aggregate([{$addFields: {total_score: {$sum : "$grades.score"}}}, {$match: {total_score: {$gt: 50}, gastronomia: "Portuguese", "address.coord.0": {$lt: -60}}}])

// 22.
db.restaurants.aggregate([{$addFields: {avg_scores: {$avg : "$grades.score"} }}, {$match : {avg_scores: {$gt: 30}}}, {$sort: {avg_scores: -1}}, {$project: {"nome": 1, "avg_scores": 1, "_id": 0}}, {$limit : 3}])

// 23.
db.restaurants.aggregate([{$match: {"address.rua": "Fifth Avenue"}}, {$group: { "_id": "$gastronomia", "no_gastronomy": {$sum: 1}}}])

// 24.
db.restaurants.aggregate([{$group: {"_id": "$address.rua", "no_restaurants": {$sum : 1}}}, {$sort: {"no_restaurants": -1}}])

// 25.

    // 26. Nome dos restaurantes de gastronomia bakery localizados no Bronx
    db.restaurants.find({"gastronomia": "Bakery", "localidade": "Bronx"}, {"_id": 0, "nome": 1, "localidade": 1})

    // 27. Qual a localidade com mais restaurants 
    db.restaurants.aggregate([{$group : {"_id": "$localidade", "total": {$sum: 1}}}, {$sort: {"total": -1}}, {$limit: 1}])
    
    // 28.  Qual o restaurante com o pior score
    db.restaurants.aggregate([{$addFields: {"scoreTotal": {$sum: "$grades.score"}}}, {$sort: {"scoreTotal": 1}}, {$limit: 1}])
    
    // 29. Apresente a gastonomia mais utilizada pelos restaurantes
    db.restaurants.aggregate([{$group: {"_id": "$gastronomia", "sum": {$sum: 1}}}, {$sort: {"sum": -1}}, {$limit: 1}])

    // 30. Liste todos os restaurantes por ordem decrescente de ordem alfabÃ©tica do nome
   - db.restaurants.find().sort({"name": -1})